/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-07-24 06:30:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class MyPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("	\n");
      out.write("<link href=\"../css/styles.css\" rel=\"stylesheet\" />\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\" />\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("<meta name=\"viewport\"\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n");
      out.write("<meta name=\"description\" content=\"\" />\n");
      out.write("<meta name=\"author\" content=\"\" />\n");
      out.write("<title>마이 페이지</title>\n");
      out.write("\n");
      out.write("\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/style.min.css\"\n");
      out.write("	rel=\"stylesheet\" />\n");
      out.write("<link href=\"css/styles.css\" rel=\"stylesheet\" />\n");
      out.write("<script src=\"https://use.fontawesome.com/releases/v6.3.0/js/all.js\"\n");
      out.write("	crossorigin=\"anonymous\">\n");
      out.write("	\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body class=\"sb-nav-fixed\">\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../toolbar/toolbar_dark.jsp", out, false);
      out.write("\n");
      out.write("		<div id=\"layoutSidenav_content\">\n");
      out.write("			<main>\n");
      out.write("				<div class=\"container-fluid px-4\">\n");
      out.write("				<br>\n");
      out.write("					<div style= \"width: 100%; border: 1px solid black\">\n");
      out.write("						\n");
      out.write("						<h2>마이 페이지</h2>\n");
      out.write("					</div>\n");
      out.write("					");
      out.write("\n");
      out.write("					<form action=\"../Controller/Logout.do\" method=\"post\">\n");
      out.write("							<input type=\"submit\" value=\"로그아웃\" id=\"logoutButton\" style=\"float: right\">\n");
      out.write("					</form>\n");
      out.write("					<br>\n");
      out.write("					<div style= \"width: 100%; height: 100%; border: 1px solid black\">\n");
      out.write("					<p>이름:  ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MyInfo.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </p>\n");
      out.write("					<p>아이디:  ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MyInfo.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </p>\n");
      out.write("					<button id=\"changePasswordBtn\" onclick=\"showPasswordFields()\">비밀번호</button>\n");
      out.write("					<div id=\"passwordFields\" style=\"display: none;\">\n");
      out.write("					<form action=\"");
      out.print(request.getContextPath() );
      out.write("/Controller/Update.do\" method=\"post\" name=\"login\">\n");
      out.write("						<p>\n");
      out.write("							현재 비밀번호: <input type=\"password\" id=\"currentPassword\" name=\"currentPassword\">\n");
      out.write("						</p>\n");
      out.write("						<p>\n");
      out.write("							새로운 비밀번호: <input type=\"password\" id=\"newPassword\" name=\"newPassword\">\n");
      out.write("						</p>\n");
      out.write("						<p>\n");
      out.write("							비밀번호 확인: <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\">\n");
      out.write("						</p>\n");
      out.write("						\n");
      out.write("						<p>\n");
      out.write("							 <input type=\"submit\" value=\"비밀번호 변경\">\n");
      out.write("						</p>\n");
      out.write("					</form>\n");
      out.write("				</div>\n");
      out.write("					<p>\n");
      out.write("						<br>\n");
      out.write("						이메일: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MyInfo.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("						\n");
      out.write("						</p>\n");
      out.write("						</div>\n");
      out.write("	<script>\n");
      out.write("	function showPasswordFields() {\n");
      out.write("    // 비밀번호 입력창들의 현재 display 상태를 가져옴\n");
      out.write("    var passwordFields = document.getElementById(\"passwordFields\");\n");
      out.write("    var display = passwordFields.style.display;\n");
      out.write("\n");
      out.write("    // 현재 display 상태가 none인 경우, 즉 비밀번호 입력창들이 숨겨진 경우\n");
      out.write("    if (display === \"none\") {\n");
      out.write("        // 비밀번호 입력창들을 보이도록 설정\n");
      out.write("        passwordFields.style.display = \"block\";\n");
      out.write("        // 비밀번호 변경 버튼의 텍스트를 \"취소\"로 변경\n");
      out.write("        document.getElementById(\"changePasswordBtn\").innerText = \"취소\";\n");
      out.write("    } else {\n");
      out.write("        // 비밀번호 입력창들을 숨기도록 설정\n");
      out.write("        passwordFields.style.display = \"none\";\n");
      out.write("        // 비밀번호 변경 버튼의 텍스트를 \"비밀번호 변경\"으로 변경\n");
      out.write("        document.getElementById(\"changePasswordBtn\").innerText = \"비밀번호 변경\";\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("	</main>\n");
      out.write("	</div>\n");
      out.write("	</div>\n");
      out.write("		<!-- 기타 마이 페이지 내용 추가 -->\n");
      out.write("		<script\n");
      out.write("			src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("			crossorigin=\"anonymous\"></script>\n");
      out.write("		<script src=\"js/scripts.js\"></script>\n");
      out.write("		<script\n");
      out.write("			src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js\"\n");
      out.write("			crossorigin=\"anonymous\"></script>\n");
      out.write("		<script src=\"assets/demo/chart-area-demo.js\"></script>\n");
      out.write("		<script src=\"assets/demo/chart-bar-demo.js\"></script>\n");
      out.write("		<script\n");
      out.write("			src=\"https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js\"\n");
      out.write("			crossorigin=\"anonymous\"></script>\n");
      out.write("		<script src=\"js/datatables-simple-demo.js\"></script>\n");
      out.write("		<script src=\"Board/clock.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
