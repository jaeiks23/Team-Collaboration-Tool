/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-25 03:06:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\" />\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("<meta name=\"viewport\"\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n");
      out.write("<meta name=\"description\" content=\"\" />\n");
      out.write("<meta name=\"author\" content=\"\" />\n");
      out.write("<title>게시판 글쓰기</title>\n");
      out.write("<link href=\"../css/styles.css\" rel=\"stylesheet\" />\n");
      out.write("<script src=\"https://use.fontawesome.com/releases/v6.3.0/js/all.js\"\n");
      out.write("	crossorigin=\"anonymous\"></script>\n");
      out.write("</head>\n");
      out.write("<body class=\"sb-nav-fixed\">\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../toolbar/toolbar_dark.jsp", out, false);
      out.write("\n");
      out.write("		<div id=\"layoutSidenav_content\">\n");
      out.write("			<main>\n");
      out.write("				<div class=\"container-fluid px-4\">\n");
      out.write("					<h1 class=\"mt-4\">게시판 글 작성하기</h1>\n");
      out.write("					<ol class=\"breadcrumb mb-4\">\n");
      out.write("						<li class=\"breadcrumb-item active\">게시판 글 작성</li>\n");
      out.write("						<li class=\"breadcrumb-item\"><a href=\"list.do\">공지게시판으로\n");
      out.write("								돌아가기</a></li>\n");
      out.write("						<li class=\"breadcrumb-item\"><a href=\"list.do\">자유게시판으로\n");
      out.write("								돌아가기</a></li>\n");
      out.write("					</ol>\n");
      out.write("				</div>\n");
      out.write("			</main>\n");
      out.write("			<form action=\"/HelloWorld/board/write.do\" method=\"post\" name=\"writeForm\"\n");
      out.write("				enctype=\"multipart/form-data\">\n");
      out.write("				<table border=\"1\" width=\"90%\">\n");
      out.write("					<tr>\n");
      out.write("						<td align=\"center\">제목</td>\n");
      out.write("						<td><input type=\"text\" name=\"title\" style=\"width: 90%;\" /></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td align=\"center\">유형</td>\n");
      out.write("						<td><input type=\"checkbox\" id=\"noticeFlag\" name=\"noticeFlag\"\n");
      out.write("							style=\"width: 30;\" /> <label for=\"noticeFlag\">공지</label></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td align=\"center\">내용</td>\n");
      out.write("						<td><textarea name=\"content\"\n");
      out.write("								style=\"width: 90%; height: 300px;\"\n");
      out.write("								placeholder=\"2000자 내외로 입력해주세요.\"></textarea></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td align=\"center\">첨부 파일</td>\n");
      out.write("						<td><input type=\"file\" name=\"ofile\" /></td>\n");
      out.write("					</tr>\n");
      out.write("				</table>\n");
      out.write("				<div align=\"center\" style='padding-top: 50px;'>\n");
      out.write("					<button type=\"button\" class=\"btn btn-info\"\n");
      out.write("						onclick=\"location.href='../board/list.do';\">목록 바로가기</button>\n");
      out.write("					<button type=\"reset\" class=\"btn btn-danger\">초기화</button>\n");
      out.write("					<button type=\"submit\" class=\"btn btn-dark\">작성완료</button>\n");
      out.write("\n");
      out.write("				</div>\n");
      out.write("			</form>\n");
      out.write("			<footer class=\"py-4 bg-light mt-auto\">\n");
      out.write("				<div class=\"container-fluid px-4\">\n");
      out.write("					\n");
      out.write("				</div>\n");
      out.write("			</footer>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("		crossorigin=\"anonymous\"></script>\n");
      out.write("	<script src=\"js/scripts.js\"></script>\n");
      out.write("	<script type=\"text/javascript\">\n");
      out.write("		\n");
      out.write("	</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
