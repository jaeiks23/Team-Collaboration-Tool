/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-07-24 06:38:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class CrePro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\" />\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("<meta name=\"viewport\"\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n");
      out.write("\n");
      out.write("<title>Register - SB Admin</title>\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/css/styles.css\"\n");
      out.write("	rel=\"stylesheet\" />\n");
      out.write("</head>\n");
      out.write("<body class=\"bg-primary\">\n");
      out.write("	<div id=\"layoutAuthentication\">\n");
      out.write("		<div id=\"layoutAuthentication_content\">\n");
      out.write("			<main>\n");
      out.write("				<div class=\"container\" style=\"margin-top: 8%;\">\n");
      out.write("					<div class=\"row justify-content-center\">\n");
      out.write("						<div class=\"col-lg-7\">\n");
      out.write("							<div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n");
      out.write("								<div class=\"card-header\">\n");
      out.write("									<h3 class=\"text-center font-weight-light my-4\">project 생성</h3>\n");
      out.write("								</div>\n");
      out.write("								<div class=\"card-body\">\n");
      out.write("									<form name=insertform>\n");
      out.write("										<div class=\"form-floating mb-3\">\n");
      out.write("											<div class=\"form-floating\">\n");
      out.write("												<input class=\"form-control\" id=\"inputLastName\" type=\"text\"\n");
      out.write("													placeholder=\"Enter your last name\" /> <label\n");
      out.write("													for=\"inputLastName\">project Name</label>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("										<div class=\"form-floating mb-3\">\n");
      out.write("											<input class=\"form-control\" id=\"inputEmail\" type=\"text\"\n");
      out.write("												placeholder=\"\"\n");
      out.write("												onkeyup=\"if(window.event.keyCode==13){insertmem()}\" /> <label\n");
      out.write("												for=\"inputEmail\">추가할 ID 입력:</label>\n");
      out.write("										</div>\n");
      out.write("										<div id=\"createplace\"></div>\n");
      out.write("										<br>\n");
      out.write("										<div class=\"mb-3\">\n");
      out.write("											<div class=\"form-floating mb-3 mb-md-0\">\n");
      out.write("												<input class=\"form-control\" id=\"inputPassword\" type=\"date\"\n");
      out.write("													placeholder=\"Create a password\" /> <label\n");
      out.write("													for=\"inputPassword\">종료날짜</label>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("\n");
      out.write("										<div\n");
      out.write("											class=\"d-flex align-items-center justify-content-between mt-4 mb-0\">\n");
      out.write("											<a class=\"btn btn-primary btn-block\" onclick=\"sendid();\">프로젝트\n");
      out.write("												생성</a> <a class=\"btn btn-primary btn-block\"\n");
      out.write("												onclick=\"location.href='../SelectPro.do';\">취소</a>\n");
      out.write("\n");
      out.write("\n");
      out.write("										</div>\n");
      out.write("									</form>\n");
      out.write("								</div>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</main>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"layoutAuthentication_footer\">\n");
      out.write("			<footer class=\"py-4 bg-light mt-auto\">\n");
      out.write("				<div class=\"container-fluid px-4\">\n");
      out.write("					<div\n");
      out.write("						class=\"d-flex align-items-center justify-content-between small\">\n");
      out.write("						<div class=\"text-muted\">Copyright &copy; Your Website 2023</div>\n");
      out.write("						<div>\n");
      out.write("							<a href=\"#\">Privacy Policy</a> &middot; <a href=\"#\">Terms\n");
      out.write("								&amp; Conditions</a>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</footer>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/scripts.js\"></script>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("		crossorigin=\"anonymous\" />\n");
      out.write("\n");
      out.write("\n");
      out.write("	<script src=\"https://use.fontawesome.com/releases/v6.3.0/js/all.js\"\n");
      out.write("		crossorigin=\"anonymous\"></script>\n");
      out.write("	<script>\n");
      out.write("	let idlist = [];\n");
      out.write("\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	document.insertform.addEventListener('keydown', function(event) {\n");
      out.write("	  if (event.keyCode === 13) {\n");
      out.write("		    event.preventDefault();\n");
      out.write("		  }\n");
      out.write("		});\n");
      out.write("	function insertmem(){\n");
      out.write("		\n");
      out.write("		let memlist = \"");
      out.print(session.getAttribute("memidlist"));
      out.write("\";\n");
      out.write("		memlist = memlist.replace(\"[\", \"\");\n");
      out.write("		memlist = memlist.replace(\"]\", \"\");\n");
      out.write("        \n");
      out.write("        let idList2 = memlist.split(\", \");\n");
      out.write("		let id = document.getElementById('inputEmail').value;\n");
      out.write("		let place = document.getElementById('createplace');\n");
      out.write("		let trues = 0;\n");
      out.write("		console.log(idList2);\n");
      out.write("		\n");
      out.write("		if(idlist.length !=0){\n");
      out.write("			for(let item of idlist){\n");
      out.write("				if(item == id){\n");
      out.write("					alert(\"이미 있습니다.\");\n");
      out.write("					trues = 1;\n");
      out.write("				}\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("	\n");
      out.write("		\n");
      out.write("		if(trues == 0){\n");
      out.write("			{\n");
      out.write("				if(idList2.indexOf(id) != -1){\n");
      out.write("					place.innerHTML += '<input type =\"button\" class= \"btn btn-primary btn-block\" name=\"member\"  readonly=\"readonly\" value='+id+'> ';\n");
      out.write("					 \n");
      out.write("					idlist.push(id);\n");
      out.write("						 \n");
      out.write("					let cols = document.getElementsByName(\"member\");\n");
      out.write("						for (var i = 0; i < cols.length; i++) {\n");
      out.write("							cols[i].addEventListener('click', function(e){\n");
      out.write("							for(let item of idlist){\n");
      out.write("								if(item == this.value){\n");
      out.write("									idlist = idlist.filter((element) => element != this.value);\n");
      out.write("									this.remove();\n");
      out.write("									}\n");
      out.write("								}\n");
      out.write("							});\n");
      out.write("						}\n");
      out.write("					\n");
      out.write("					}else{\n");
      out.write("						alert(\"회원 목록에 없습니다.\");\n");
      out.write("					}\n");
      out.write("				\n");
      out.write("						\n");
      out.write("				}\n");
      out.write("			\n");
      out.write("			}\n");
      out.write("				\n");
      out.write("		document.getElementById('inputEmail').value=\"\";\n");
      out.write("			\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	function sendid(){\n");
      out.write("		let newForm = document.createElement('form');\n");
      out.write("		\n");
      out.write("		newForm.name = 'newForm';\n");
      out.write("		newForm.method = 'post';\n");
      out.write("		newForm.action = '../createpro.do';\n");
      out.write("		newForm.target ='_self';\n");
      out.write("		let name = document.getElementById('inputLastName').value;\n");
      out.write("		let date = document.getElementById('inputPassword').value;\n");
      out.write("		\n");
      out.write("		var input1 = document.createElement('input');\n");
      out.write("		var input2 = document.createElement('input');\n");
      out.write("		var input3 = document.createElement('input');\n");
      out.write("		\n");
      out.write("		input1.setAttribute(\"type\",\"hidden\");\n");
      out.write("        input1.setAttribute(\"name\",\"idlist\");\n");
      out.write("        input1.setAttribute(\"value\",idlist);\n");
      out.write("        \n");
      out.write("        input2.setAttribute(\"type\",\"hidden\");\n");
      out.write("        input2.setAttribute(\"name\",\"project_Name\");\n");
      out.write("        input2.setAttribute(\"value\",name);\n");
      out.write("       \n");
      out.write("        input3.setAttribute(\"type\",\"hidden\");\n");
      out.write("        input3.setAttribute(\"name\",\"PRO_E_DATE\");\n");
      out.write("        input3.setAttribute(\"value\",date);\n");
      out.write("\n");
      out.write("        newForm.appendChild(input1);\n");
      out.write("        newForm.appendChild(input2);\n");
      out.write("        newForm.appendChild(input3);\n");
      out.write("        \n");
      out.write("\n");
      out.write("        document.body.appendChild(newForm);\n");
      out.write("\n");
      out.write("        newForm.submit();\n");
      out.write("		\n");
      out.write("		\n");
      out.write("	}\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
